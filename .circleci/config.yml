defaults: &defaults
  docker:
    - image: circleci/android:api-29
  working_directory: ~/code
default-env: &defaultEnv
  JVM_OPTS: -Xmx3200m
  _JAVA_OPTIONS: -Xmx1536m
publisher-template: &publisherTemplate
  <<: *defaults
  steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Link Build Tools
        command: echo 'export PATH=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}:${PATH}' >> $BASH_ENV
    - run:
        name: Chmod permissions
        command: sudo chmod +x ./gradlew
    - run:
        name: Export secrets to Gradle properties
        command: |
          echo -e "METEOR_RELEASE_STORE_FILE=meteor-release-keystore.jks\n" >> gradle.properties
          echo -e "METEOR_RELEASE_STORE_PASS=$METEOR_RELEASE_STORE_PASS\n" >> gradle.properties
          echo -e "METEOR_RELEASE_KEY_ALIAS=$METEOR_RELEASE_KEY_ALIAS\n" >> gradle.properties
          echo -e "METEOR_RELEASE_KEY_PASS=$METEOR_RELEASE-KEY_PASS" >> gradle.properties
    - run:
        name: Create Local Properties
        command: touch local.properties
    - run:
        name: Add Api Keys
        command:
          echo -e "weatherApiKey=\"$WEATHER_API_KEY\"\n" >> local.properties
          echo -e "newsApiKey=\"$NEWS_API_KEY\"\n" >> local.properties
    - run:
        name: Download Dependencies
        command: ./gradlew --no-daemon --max-workers 2 --console=plain androidDependencies
    - save_cache:
        paths:
          - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
    - run:
        name: Decrypt Keystore
        command: openssl aes-256-cbc -pbkdf2 -d -in meteor-keystore.jks.enc -out meteor-release-keystore.jks -k $KEYSTORE_DECRYPTION_KEY -iv $KEYSTORE_DECRYPTION_IV -md sha256
    - run:
        name: Assemble, Align and Sign the APK
        command: ./gradlew --no-daemon --max-workers 2 --console=plain clean "assemble${BUILD_TYPE}"
    - run:
        name: Verify and Stash APK
        command: |
          APK_NAME="app-${BUILD_TYPE}.apk"
          APK_PATH="./app/build/outputs/apk/$BUILD_TYPE/$APK_NAME"
          zipalign -c -v 4 $APK_PATH && && apksigner verify $APK_PATH
          mkdir ~/workspace
          cp $APK_PATH ~/workspace/$APK_NAME
    - persist_to_workspace:
        root: ~/workspace
        paths:
          - "*.apk"

version: 2.1
jobs:
  test:
    <<: *defaults
    environment:
      <<: *defaultEnv
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Create Local Properties
          command: touch local.properties
      - run:
          name: Export secrets to Gradle properties
          command: |
            echo -e "\nMETEOR_RELEASE_STORE_FILE=meteor-release-keystore.jks\n" >> gradle.properties
            echo -e "METEOR_RELEASE_STORE_PASS=$METEOR_RELEASE_STORE_PASS\n" >> gradle.properties
            echo -e "METEOR_RELEASE_KEY_ALIAS=$METEOR_RELEASE_KEY_ALIAS\n" >> gradle.properties
            echo -e "METEOR_RELEASE_KEY_PASS=$METEOR_RELEASE_KEY_PASS" >> gradle.properties
      - run:
          name: Add Api Keys
          command: |
            echo -e "weatherApiKey=\"$WEATHER_API_KEY\"\n" >> local.properties
            echo -e "newsApiKey=\"$NEWS_API_KEY\"\n" >> local.properties
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew testDebugUnitTest --console=plain
  publish-debug:
    <<: *publisherTemplate
    environment:
      <<: *defaultEnv
      BUILD_TYPE: debug
  publish-release:
    <<: *publisherTemplate
    environment:
      <<: *defaultEnv
      BUILD_TYPE: release
  tag-release:
    <<: *defaults
    environment:
      <<: *defaultEnv
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Create Tag
          command: |
            VNAME=$(grep 'versionName\s' app/build.gradle | tr -d ' "[a-zA-Z]')
            BODY=$(git cherry -v develop)
            ghr -t "$GITHUB_TOKEN" -u "$CIRCLE_USERNAME" -prerelease -b "$BODY" "v$VNAME-$CIRCLE_BUILD_NUM-RELEASE" /tmp/workspace
  tag-debug-release:
    <<: *defaults
    environment:
      <<: *defaultEnv
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Create Tag
          command: |
            VNAME=$(grep 'versionName\s' app/build.gradle | tr -d ' "[a-zA-Z]')
            BODY=$(git cherry -v develop)
            ghr -t "$GITHUB_TOKEN" -u "$CIRCLE_USERNAME" -prerelease -b "$BODY" "v$VNAME-$CIRCLE_BUILD_NUM-debug" /tmp/workspace

workflows:
  version: 2.1
  build:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
                - develop
      - publish-debug:
          filters:
            branches:
              only: develop
      - publish-release:
          filters:
            branches:
              only: master
      - tag-debug-release:
          requires:
            - publish-debug
          filters:
            branches:
              only: develop
          context: org-global
      - tag-release:
          requires:
            - publish-release
          filters:
            branches:
              only: master
          context: org-global